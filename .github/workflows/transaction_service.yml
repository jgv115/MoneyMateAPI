name: "MoneyMateAPI_TransactionService"

on:
  push:
    branches:
      - master
    paths:
      - 'TransactionService/**'
      - '.github/workflows/transaction_service.yml'

jobs: 
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Run unit tests
        run: dotnet test test/TransactionService.Tests
        working-directory: ./TransactionService

  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Run MoneyMateDB
        run: make start_db
        working-directory: ./MoneyMateDb
      - name: Run dependencies
        run: make start_debug_dependencies
        working-directory: ./TransactionService
      - name: Run integration tests
        run: dotnet test test/TransactionService.IntegrationTests -l "console;verbosity=normal"
        working-directory: ./TransactionService

  build_and_push_to_ecr:
    name: Build image and push to ECR
    needs: [unit_tests, integration_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moneymate_transaction_service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG TransactionService/src/TransactionService
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  provision_infra_test:
    name: Provision Infra for Test
    needs: 
      - build_and_push_to_ecr
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: test
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      IMAGE_TAG: ${{ github.sha }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
      CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run terraform apply
        run: ./batect -f TransactionService/batect.yml terraform_apply
        
  provision_infra_prod:
    name: Provision Infra for Prod
    needs:
      - provision_infra_test
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: prod
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      IMAGE_TAG: ${{ github.sha }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
      CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run terraform apply
        run: ./batect -f TransactionService/batect.yml terraform_apply