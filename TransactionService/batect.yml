project_name: moneymate_api

.aws_creds_envs: &aws_creds_envs
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
  AWS_REGION: ${AWS_REGION:-}

.local_dev_envs: &local_dev_envs
  AWS__AccessKey: test,
  AWS__SecretKey: test,
  AWS__Region: ap-southeast-2
  AWS__LocalMode: "true"
  AWS__ServiceUrl: "http://localstack:4566"

containers:
  dotnet_build_env:
    image: mcr.microsoft.com/dotnet/sdk:5.0-buster-slim
    environment:
      ASPNETCORE_URLS: http://*:5000
      ASPNETCORE_ENVIRONMENT: dev
      <<: *local_dev_envs
    ports:
      - container: 5000
        local: 5000
    volumes:
      - local: .
        container: /code
        options: cached
      - type: cache
        name: nuget-cache
        container: /home/container-user/.nuget
    working_directory: /code
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
  
  dotnet_run_env:
    image: mcr.microsoft.com/dotnet/sdk:5.0-buster-slim
    environment:
      ASPNETCORE_URLS: http://*:5000
      ASPNETCORE_ENVIRONMENT: dev
      <<: *local_dev_envs
    ports:
      - container: 5000
        local: 5000
    volumes:
      - local: .batect/dotnet_run_env/app
        container: /app
        options: cached
    working_directory: /app
    entrypoint: dotnet TransactionService.dll
        
  terraform_env:
    image: hashicorp/terraform:latest
    environment:
      <<: *aws_creds_envs
      TF_WORKSPACE: $ENVIRONMENT
      TF_VAR_TRANSACTION_SERVICE_LAMBDA_IMAGE_TAG: $IMAGE_TAG
      TF_VAR_CLOUDFLARE_EMAIL: $CLOUDFLARE_EMAIL
      TF_VAR_CLOUDFLARE_API_KEY: $CLOUDFLARE_API_KEY
    volumes:
      - local: .
        container: /code
        options: cached
    working_directory: /code/infra

  localstack:
    image: localstack/localstack:0.13.0
    environment:
      SERVICES: dynamodb
      AWS_ACCESS_KEY_ID: fake
      AWS_SECRET_ACCESS_KEY: fake
    volumes:
      - local: ./.batect/localstack/localstack-bootstrap.sh
        container: /docker-entrypoint-initaws.d/localstack-bootstrap.sh
      - local: ./.batect/localstack/healthcheck.sh
        container: /app/healthcheck.sh
    ports:
      - local: 4566
        container: 4566
    health_check:
      command: /app/healthcheck.sh
      interval: 3s
      retries: 5
      start_period: 10s
      timeout: 10s
      
  localstack_clean:
    additional_hostnames:
      - localstack
    image: localstack/localstack:0.13.0
    environment:
      SERVICES: dynamodb
      AWS_ACCESS_KEY_ID: fake
      AWS_SECRET_ACCESS_KEY: fake
    volumes:
      - local: ./.batect/localstack_clean/healthcheck.sh
        container: /app/healthcheck.sh
    ports:
      - local: 4566
        container: 4566
    health_check:
      command: /app/healthcheck.sh
      interval: 3s
      retries: 5
      start_period: 10s
      timeout: 10s
tasks:
  build:
    description: Builds the Transaction Service
    run:
      container: dotnet_build_env
      command: dotnet build src/TransactionService/TransactionService.csproj -o .batect/dotnet_run_env/app

  unit_tests:
    description: Runs the unit tests
    run:
      container: dotnet_build_env
      command: dotnet test test/TransactionService.Tests

  integration_tests:
    description: Runs integration tests
    dependencies:
      - localstack_clean
    run:
      container: dotnet_build_env
      command: dotnet test test/TransactionService.IntegrationTests

  start_localstack:
    description: Starts localstack only
    run:
      container: localstack_clean
      
  start_localstack_with_data:
    description: Starts localstack only
    run:
      container: localstack

  run:
    description: Runs the Transaction Service
    prerequisites:
      - build
    dependencies:
      - localstack
    run:
      container: dotnet_run_env

  terraform_plan:
    description: Runs terraform plan
    group: Terraform
    run:
      container: terraform_env
      entrypoint: ../scripts/plan_terraform.sh

  terraform_apply:
    description: Runs terraform apply
    group: Terraform
    run:
      container: terraform_env
      entrypoint: ../scripts/apply_terraform.sh