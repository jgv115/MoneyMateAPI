project_name: moneymate_api

.aws-creds-envs: &aws-creds-envs
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
  AWS_REGION: ${AWS_REGION:-}

containers:
  dotnet_env:
    image: mcr.microsoft.com/dotnet/sdk:5.0-alpine
    environment:
      ASPNETCORE_URLS: http://*:5000
      ASPNETCORE_ENVIRONMENT: dev
    ports:
      - container: 5000
        local: 5000
    volumes:
      - local: .
        container: /code
        options: cached
      - type: cache
        name: nuget-cache
        container: /home/container-user/.nuget
    working_directory: /code
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
  
  terraform_env:
    image: hashicorp/terraform:latest
    environment:
      <<: *aws-creds-envs
      TF_WORKSPACE: $ENVIRONMENT
      TF_VAR_TRANSACTION_SERVICE_LAMBDA_IMAGE_TAG: $IMAGE_TAG
      TF_VAR_CLOUDFLARE_EMAIL: $CLOUDFLARE_EMAIL
      TF_VAR_CLOUDFLARE_API_KEY: $CLOUDFLARE_API_KEY
    volumes:
      - local: .
        container: /code
        options: cached
    working_directory: /code/infra

tasks:
  build:
    description: Builds the Transaction Service
    run:
      container: dotnet_env
      command: dotnet build src/TransactionService/TransactionService.csproj
  
  unit_tests:
    description: Runs the unit tests
    run:
      container: dotnet_env
      command: dotnet test test/TransactionService.Tests
  
  run:
    description: Runs the Transaction Service
    prerequisites:
      - build
    run:
      container: dotnet_env
      command: dotnet src/TransactionService/bin/Debug/net5.0/TransactionService.dll
      
  terraform_plan:
    description: Runs terraform plan
    group: Terraform
    run:
      container: terraform_env
      entrypoint: ../scripts/plan_terraform.sh

  terraform_apply:
    description: Runs terraform apply
    group: Terraform
    run:
      container: terraform_env
      entrypoint: ../scripts/apply_terraform.sh